import json
from urllib import request as urlrequest
from flask import request
from flask import current_app as app
from flask import redirect as flask_redirect
from flask import url_for as flask_url_for
import logging


    

def url_for(endpoint, **values):
    """
    Monkey patching the `url_for` function to add the ingress path. This is a 
    workaround to add the ingress path to the URL generated by `url_for`
    
    See https://developers.home-assistant.io/docs/add-ons/presentation/#ingress
    """
    with app.app_context():
        ingress_url = request.headers.get('X-Ingress-Path', '')
        return ingress_url + flask_url_for(endpoint, **values)




def redirect(url, code=302):
    """
    Monkey patching the `redirect` function to add the ingress path. This is a
    workaround to add the ingress path to the URL generated by `redirect`
    See https://developers.home-assistant.io/docs/add-ons/presentation/#ingress
    """
    with app.app_context():    
        ingress_url = request.headers.get('X-Ingress-Path', '')
        logging.debug(f"Redirecting to: {ingress_url}{url}")
        return flask_redirect(f"{ingress_url}{url}", code=code)


def get_user_role(username=""):
    app.config.from_prefixed_env()

    if not app.debug:
        core_addon = app.config.get("CORE_ADDON_HOSTNAME")
        api_url = f"http://{core_addon}:8099/api/users/{username}"
        logging.debug(f"API URL: {api_url}")
        
        with urlrequest.urlopen(api_url) as response:
            data = response.read()
            print("Response: ", data)
            # Decode bytes to string
            data = data.decode("utf-8")
            # Convert JSON string to Python dictionary
            data = json.loads(data)

            logging.debug(f"Data: {data}")
            return data["domiot_role"]
    else:
        return app.config['ROLE']



            